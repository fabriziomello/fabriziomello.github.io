<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sqlmed | Fabrízio de Royes Mello]]></title>
  <link href="http://fabriziomello.github.io/blog/categories/sqlmed/atom.xml" rel="self"/>
  <link href="http://fabriziomello.github.io/"/>
  <updated>2014-04-27T01:35:33-03:00</updated>
  <id>http://fabriziomello.github.io/</id>
  <author>
    <name><![CDATA[Fabrízio de Royes Mello]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 9.3devel - Nova Extensão "Postgres_fdw"]]></title>
    <link href="http://fabriziomello.github.io/blog/2013/02/21/postgresql-93devel-nova-extensao/"/>
    <updated>2013-02-21T00:00:00-03:00</updated>
    <id>http://fabriziomello.github.io/blog/2013/02/21/postgresql-93devel-nova-extensao</id>
    <content type="html"><![CDATA[<div class='post'>
Apartir da <a href="http://www.postgresql.org/docs/9.1/static/release-9-1.html">release 9.1</a> o PostgreSQL adicionou suporte a <a href="http://www.postgresql.org/docs/9.1/static/sql-createforeigntable.html">foreign tables</a>, viabilizando assim uma forma simples de <a href="http://en.wikipedia.org/wiki/SQL/MED">gerenciar fontes de dados externas</a> dentro do <a href="http://wiki.postgresql.org/wiki/SQL/MED">PostgreSQL</a>.<br /><br />Através dessa infraestrutura é possível a <a href="http://www.postgresql.org/docs/9.2/static/fdwhandler.html">implementação dos FDW (Foreign Data Wrapper)</a>, que são uma espécie de driver para acessar uma fonte de dados externa. <br /><br />Já existem <a href="http://wiki.postgresql.org/wiki/Foreign_data_wrappers">diversos FDW implementados</a> que permitem acessar outros bancos de dados (oracle, mysql, etc), arquivos (texto, csv, etc), bases NoSQL (mongodb, couchdb, redis, etc) e outras fontes de dados diferentes, tais como: twitter, ldap, www, etc.<br /><br />Hoje foi commitado no git do PostgreSQL um FDW específico para acessar bases PostgreSQL, chamado "<a href="http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=d0d75c402217421b691050857eb3d7af82d0c770">postgres_fdw</a>", então vou demonstrar como instalar/configurar de uma forma muito simples.<br /><br /><br /><b>1) Instalar o "postgres_fdw" apartir do git</b><br /><br />Nesse exemplo vou mostrar como instalar/compilar o PostgreSQL apartir do <a href="http://git.postgresql.org/gitweb/?p=postgresql.git;a=summary">git oficial</a>, mas se vc tiver uma conta no <a href="https://github.com/">github</a> pode usar tb o nosso <a href="https://github.com/postgres/postgres">clone do repositório oficial</a>.<br /><br /><pre class="brush: bash; toolbar: false">git clone git://git.postgresql.org/git/postgresql.git<br />cd postgresql<br />./configure --prefix=$HOME/pgsql<br />make<br />make install<br />cd contrib/postgres_fdw<br />make<br />make install<br /></pre><br /><br /><b>2) Inicializar um novo cluster e colocar o PostgreSQL para executar</b><br /><br /><pre class="brush: bash; toolbar: false">$ cd $HOME/pgsql<br />$ mkdir data<br />$ chmod 700 data<br />$ ./bin/initdb -D data <br />$ ./bin/pg_ctl -D data -l startup.log start<br /></pre><br /><br /><b>3) Criar bases e tabela para testes</b><br /><br /><pre class="brush: bash; toolbar: false">$ cd $HOME/pgsql<br />$ ./bin/createdb bd1<br />$ ./bin/createdb bd2<br />$ ./bin/psql bd2 -c "create table foo(bar integer);"<br />$ ./bin/psql bd2 -c "insert into foo(bar) select * from generate_series(1, 10);"<br /></pre><br />Para explicar, criamos 2 (duas) bases de dados "bd1" e "bd2", e no "bd2" criamos uma tabela chamada "foo" a qual iremos acessar apartir do "bd1" criando uma foreign table como explicarei em seguida.<br /><br /><br /><b>4) Criar a extensão "postgres_fdw" no "bd1"</b><br /><br /><pre class="brush: sql; toolbar: false">$ ./bin/psql bd1<br />psql (9.3devel)<br />Type "help" for help.<br /><br />bd1=# CREATE EXTENSION postgres_fdw ;<br />CREATE EXTENSION<br /><br />bd1=# \dx<br />                               List of installed extensions<br />     Name     | Version |   Schema   |                    Description                     <br />--------------+---------+------------+----------------------------------------------------<br /> plpgsql      | 1.0     | pg_catalog | PL/pgSQL procedural language<br /> postgres_fdw | 1.0     | public     | foreign-data wrapper for remote PostgreSQL servers<br />(2 rows)<br /></pre><br /><br /><b>5) Criar conexão com "bd2" no "bd1"</b><br /><br /><pre class="brush: sql; toolbar: false">bd1=# CREATE SERVER conexao_bd2 FOREIGN DATA WRAPPER postgres_fdw OPTIONS (dbname 'bd2');<br />CREATE SERVER<br /><br />bd1=# \des+<br />                                              List of foreign servers<br />    Name     |  Owner   | Foreign-data wrapper | Access privileges | Type | Version |  FDW Options   | Description <br />-------------+----------+----------------------+-------------------+------+---------+----------------+-------------<br /> conexao_bd2 | fabrizio | postgres_fdw         |                   |      |         | (dbname 'bd2') | <br />(1 row)<br /><br />bd1=# CREATE USER MAPPING FOR current_user SERVER conexao_bd2 ;<br />CREATE USER MAPPING<br /><br />bd1=# \deu+<br />         List of user mappings<br />   Server    | User name | FDW Options <br />-------------+-----------+-------------<br /> conexao_bd2 | fabrizio  | <br />(1 row)<br /></pre><br /><br /><br /><b>6) Acessar a tabela "foo" do "bd2" apartir do "bd1"</b><br /><br /><pre class="brush: sql; toolbar: false">bd1=# CREATE FOREIGN TABLE foo (bar integer) SERVER conexao_bd2 ;<br />CREATE FOREIGN TABLE<br /><br />bd1=# \d<br />            List of relations<br /> Schema | Name |     Type      |  Owner   <br />--------+------+---------------+----------<br /> public | foo  | foreign table | fabrizio<br />(1 row)<br /><br />bd1=# SELECT * FROM foo;<br /> bar <br />-----<br />   1<br />   2<br />   3<br />   4<br />   5<br />   6<br />   7<br />   8<br />   9<br />  10<br />(10 rows)<br /></pre><br /><br /><b>Considerações</b><br /><br />Segundo a própria documentação oficial, o "<a href="http://www.postgresql.org/docs/devel/static/postgres-fdw.html">postgres_fdw</a>" é uma alternativa mais robusta em relação ao antigo "<a href="http://www.postgresql.org/docs/current/static/dblink.html">dblink</a>" pois nos oferece uma sintaxe mais padronizada e simplificada para acessar tabelas remotas, inclusive com melhor desempenho em muitos casos. <br /><br />E pelo que pude acompanhar do seu desenvolvimento, parece que essa FDW deve servir como modelo para o desenvolvimento de outras FDW para acessar outras bases de dados relacionais.<br /><br />De uma forma muito simples é possível acessar tabelas de outra base de dados PostgreSQL, e o mesmo ocorre com outras fontes de dados, mas por enquanto apenas para leitura (SELECT), entretanto já está em revisão um <a href="https://commitfest.postgresql.org/action/patch_view?id=919">patch</a> para permitir escrita (INSERT/UPDATE/DELETE) em foreign tables, vamos aguardar.</div>

]]></content>
  </entry>
  
</feed>
